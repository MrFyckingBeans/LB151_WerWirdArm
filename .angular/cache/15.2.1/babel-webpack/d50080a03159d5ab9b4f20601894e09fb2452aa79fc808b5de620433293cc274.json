{"ast":null,"code":"import { forkJoin } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction QuestionPageComponent_tr_22_td_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const question_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(question_r2.frage);\n  }\n}\nfunction QuestionPageComponent_tr_22_td_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r22 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\")(1, \"input\", 10);\n    i0.ɵɵlistener(\"ngModelChange\", function QuestionPageComponent_tr_22_td_2_Template_input_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r22);\n      const question_r2 = i0.ɵɵnextContext().$implicit;\n      return i0.ɵɵresetView(question_r2.frage = $event);\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const question_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", question_r2.frage);\n  }\n}\nfunction QuestionPageComponent_tr_22_td_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const question_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(question_r2.falscheAntwort1);\n  }\n}\nfunction QuestionPageComponent_tr_22_td_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r27 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\")(1, \"input\", 11);\n    i0.ɵɵlistener(\"ngModelChange\", function QuestionPageComponent_tr_22_td_4_Template_input_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r27);\n      const question_r2 = i0.ɵɵnextContext().$implicit;\n      return i0.ɵɵresetView(question_r2.falscheAntwort1 = $event);\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const question_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", question_r2.falscheAntwort1);\n  }\n}\nfunction QuestionPageComponent_tr_22_td_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const question_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(question_r2.falscheAntwort2);\n  }\n}\nfunction QuestionPageComponent_tr_22_td_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r32 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\")(1, \"input\", 12);\n    i0.ɵɵlistener(\"ngModelChange\", function QuestionPageComponent_tr_22_td_6_Template_input_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r32);\n      const question_r2 = i0.ɵɵnextContext().$implicit;\n      return i0.ɵɵresetView(question_r2.falscheAntwort2 = $event);\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const question_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", question_r2.falscheAntwort2);\n  }\n}\nfunction QuestionPageComponent_tr_22_td_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const question_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(question_r2.falscheAntwort3);\n  }\n}\nfunction QuestionPageComponent_tr_22_td_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r37 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\")(1, \"input\", 13);\n    i0.ɵɵlistener(\"ngModelChange\", function QuestionPageComponent_tr_22_td_8_Template_input_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r37);\n      const question_r2 = i0.ɵɵnextContext().$implicit;\n      return i0.ɵɵresetView(question_r2.falscheAntwort3 = $event);\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const question_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", question_r2.falscheAntwort3);\n  }\n}\nfunction QuestionPageComponent_tr_22_td_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const question_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(question_r2.richtigeAntwort);\n  }\n}\nfunction QuestionPageComponent_tr_22_td_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r42 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\")(1, \"input\", 14);\n    i0.ɵɵlistener(\"ngModelChange\", function QuestionPageComponent_tr_22_td_10_Template_input_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r42);\n      const question_r2 = i0.ɵɵnextContext().$implicit;\n      return i0.ɵɵresetView(question_r2.richtigeAntwort = $event);\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const question_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", question_r2.richtigeAntwort);\n  }\n}\nfunction QuestionPageComponent_tr_22_td_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const question_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(question_r2.categoryName);\n  }\n}\nfunction QuestionPageComponent_tr_22_td_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r47 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\")(1, \"input\", 15);\n    i0.ɵɵlistener(\"ngModelChange\", function QuestionPageComponent_tr_22_td_12_Template_input_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r47);\n      const question_r2 = i0.ɵɵnextContext().$implicit;\n      return i0.ɵɵresetView(question_r2.categoryName = $event);\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const question_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", question_r2.categoryName);\n  }\n}\nfunction QuestionPageComponent_tr_22_button_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r51 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function QuestionPageComponent_tr_22_button_14_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r51);\n      const question_r2 = i0.ɵɵnextContext().$implicit;\n      const ctx_r49 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r49.editQuestion(question_r2));\n    });\n    i0.ɵɵelement(1, \"i\", 17);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction QuestionPageComponent_tr_22_button_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r54 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function QuestionPageComponent_tr_22_button_15_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r54);\n      const question_r2 = i0.ɵɵnextContext().$implicit;\n      const ctx_r52 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r52.updateQuestion(question_r2));\n    });\n    i0.ɵɵelement(1, \"i\", 18);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction QuestionPageComponent_tr_22_button_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r57 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 19);\n    i0.ɵɵlistener(\"click\", function QuestionPageComponent_tr_22_button_16_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r57);\n      const question_r2 = i0.ɵɵnextContext().$implicit;\n      const ctx_r55 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r55.deleteQuestion(question_r2));\n    });\n    i0.ɵɵelement(1, \"i\", 20);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction QuestionPageComponent_tr_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtemplate(1, QuestionPageComponent_tr_22_td_1_Template, 2, 1, \"td\", 5);\n    i0.ɵɵtemplate(2, QuestionPageComponent_tr_22_td_2_Template, 2, 1, \"td\", 5);\n    i0.ɵɵtemplate(3, QuestionPageComponent_tr_22_td_3_Template, 2, 1, \"td\", 5);\n    i0.ɵɵtemplate(4, QuestionPageComponent_tr_22_td_4_Template, 2, 1, \"td\", 5);\n    i0.ɵɵtemplate(5, QuestionPageComponent_tr_22_td_5_Template, 2, 1, \"td\", 5);\n    i0.ɵɵtemplate(6, QuestionPageComponent_tr_22_td_6_Template, 2, 1, \"td\", 5);\n    i0.ɵɵtemplate(7, QuestionPageComponent_tr_22_td_7_Template, 2, 1, \"td\", 5);\n    i0.ɵɵtemplate(8, QuestionPageComponent_tr_22_td_8_Template, 2, 1, \"td\", 5);\n    i0.ɵɵtemplate(9, QuestionPageComponent_tr_22_td_9_Template, 2, 1, \"td\", 5);\n    i0.ɵɵtemplate(10, QuestionPageComponent_tr_22_td_10_Template, 2, 1, \"td\", 5);\n    i0.ɵɵtemplate(11, QuestionPageComponent_tr_22_td_11_Template, 2, 1, \"td\", 5);\n    i0.ɵɵtemplate(12, QuestionPageComponent_tr_22_td_12_Template, 2, 1, \"td\", 5);\n    i0.ɵɵelementStart(13, \"td\");\n    i0.ɵɵtemplate(14, QuestionPageComponent_tr_22_button_14_Template, 2, 0, \"button\", 8);\n    i0.ɵɵtemplate(15, QuestionPageComponent_tr_22_button_15_Template, 2, 0, \"button\", 8);\n    i0.ɵɵtemplate(16, QuestionPageComponent_tr_22_button_16_Template, 2, 0, \"button\", 9);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const question_r2 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !question_r2.editing);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", question_r2.editing);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !question_r2.editing);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", question_r2.editing);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !question_r2.editing);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", question_r2.editing);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !question_r2.editing);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", question_r2.editing);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !question_r2.editing);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", question_r2.editing);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !question_r2.editing);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", question_r2.editing);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.newRow.editing);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", question_r2.editing);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.newRow.editing);\n  }\n}\nfunction QuestionPageComponent_tr_23_option_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 28);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const category_r60 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", category_r60.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(category_r60.name);\n  }\n}\nfunction QuestionPageComponent_tr_23_button_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r62 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function QuestionPageComponent_tr_23_button_15_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r62);\n      const ctx_r61 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r61.submitNewAnswers(ctx_r61.newRow));\n    });\n    i0.ɵɵelement(1, \"i\", 18);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction QuestionPageComponent_tr_23_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r64 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\")(2, \"input\", 21);\n    i0.ɵɵlistener(\"ngModelChange\", function QuestionPageComponent_tr_23_Template_input_ngModelChange_2_listener($event) {\n      i0.ɵɵrestoreView(_r64);\n      const ctx_r63 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r63.newRow.question = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(3, \"td\")(4, \"input\", 22);\n    i0.ɵɵlistener(\"ngModelChange\", function QuestionPageComponent_tr_23_Template_input_ngModelChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r64);\n      const ctx_r65 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r65.newRow.falscheAntwort1 = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"td\")(6, \"input\", 23);\n    i0.ɵɵlistener(\"ngModelChange\", function QuestionPageComponent_tr_23_Template_input_ngModelChange_6_listener($event) {\n      i0.ɵɵrestoreView(_r64);\n      const ctx_r66 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r66.newRow.falscheAntwort2 = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"td\")(8, \"input\", 24);\n    i0.ɵɵlistener(\"ngModelChange\", function QuestionPageComponent_tr_23_Template_input_ngModelChange_8_listener($event) {\n      i0.ɵɵrestoreView(_r64);\n      const ctx_r67 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r67.newRow.falscheAntwort3 = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"td\")(10, \"input\", 25);\n    i0.ɵɵlistener(\"ngModelChange\", function QuestionPageComponent_tr_23_Template_input_ngModelChange_10_listener($event) {\n      i0.ɵɵrestoreView(_r64);\n      const ctx_r68 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r68.newRow.richtigeAntwort = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(11, \"td\")(12, \"select\", 26);\n    i0.ɵɵlistener(\"ngModelChange\", function QuestionPageComponent_tr_23_Template_select_ngModelChange_12_listener($event) {\n      i0.ɵɵrestoreView(_r64);\n      const ctx_r69 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r69.newRow.kategorien_id = $event);\n    });\n    i0.ɵɵtemplate(13, QuestionPageComponent_tr_23_option_13_Template, 2, 2, \"option\", 27);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(14, \"td\");\n    i0.ɵɵtemplate(15, QuestionPageComponent_tr_23_button_15_Template, 2, 0, \"button\", 8);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.newRow.question);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.newRow.falscheAntwort1);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.newRow.falscheAntwort2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.newRow.falscheAntwort3);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.newRow.richtigeAntwort);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.newRow.kategorien_id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.categories);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.newRow.editing);\n  }\n}\nexport class QuestionPageComponent {\n  constructor(http) {\n    this.http = http;\n    this.questions = [];\n    this.categories = [];\n    this.answers = [];\n    this.newRow = {};\n    this.questionsResponse = [];\n  }\n  ngOnInit() {\n    this.loadData();\n    console.log(\"question array 1\" + this.questions);\n    console.log(\"fett\");\n  }\n  loadData() {\n    console.log(\"allu\");\n    const categoriesUrl = 'http://localhost:5002/kategorien';\n    const questionsUrl = 'http://localhost:5002/fragen';\n    const answersUrl = 'http://localhost:5002/antworten';\n    forkJoin([this.http.get(categoriesUrl), this.http.get(questionsUrl), this.http.get(answersUrl)]).subscribe(([categoriesResponse, questionsResponse, answersResponse]) => {\n      this.categories = categoriesResponse;\n      this.answers = answersResponse;\n      this.questionsResponse = questionsResponse; // Set the questionsResponse property\n      console.log(questionsResponse);\n      this.questions = questionsResponse.map(question => {\n        const category = this.categories.find(cat => cat.id === question.kategorien_id);\n        const answers = [this.getAnswerById(question.falscheAntwort1), this.getAnswerById(question.falscheAntwort2), this.getAnswerById(question.falscheAntwort3), this.getAnswerById(question.richtigeAntwort)];\n        return {\n          ...question,\n          categoryName: category?.name,\n          falscheAntwort1: answers[0],\n          falscheAntwort2: answers[1],\n          falscheAntwort3: answers[2],\n          richtigeAntwort: answers[3]\n        };\n      });\n    });\n  }\n  getAnswerById(answerId) {\n    const answer = this.answers.find(a => a.id === answerId);\n    return answer ? answer.antwort : '';\n  }\n  addNewRow() {\n    this.newRow = {\n      editing: true\n    };\n    this.questions.push(this.newRow);\n  }\n  submitNewAnswers(answer) {\n    const answersUrl = 'http://localhost:5002/antworten';\n    const answersSubmitted = [this.newRow.falscheAntwort1, this.newRow.falscheAntwort2, this.newRow.falscheAntwort3, this.newRow.richtigeAntwort];\n    console.log(\"newRow:\", this.newRow);\n    console.log(\"answersSubmitted:\", answersSubmitted);\n    if (answersSubmitted.some(answer => !answer || answer.trim() === \"\")) {\n      console.error(\"One or more answers are empty. Please provide valid answers.\");\n      return;\n    }\n    const postRequests = [];\n    for (let index = 0; index < answersSubmitted.length; index++) {\n      const postRequest = this.http.post(answersUrl, {\n        antwort: answersSubmitted[index]\n      });\n      postRequests.push(postRequest);\n    }\n    forkJoin(postRequests).subscribe(responses => {\n      this.loadData();\n      this.submitNewQuestion(this.newRow, responses);\n    }, error => {\n      console.error('Error submitting new question:', error);\n    });\n  }\n  submitNewQuestion(question, answerAll) {\n    console.log(\"alla\");\n    //console.log(question);\n    const questionsUrl = 'http://localhost:5002/fragen';\n    const newQuestion = {\n      frage: this.newRow.question,\n      falscheAntwort1: answerAll[0].id,\n      falscheAntwort2: answerAll[1].id,\n      falscheAntwort3: answerAll[2].id,\n      richtigeAntwort: answerAll[3].id,\n      kategorien_id: this.newRow.kategorien_id\n    };\n    console.log(newQuestion);\n    this.http.post(questionsUrl, newQuestion).subscribe(response => {\n      this.loadData();\n    }, error => {\n      console.error('Error submitting new question:', error);\n    });\n  }\n  deleteQuestion(question) {\n    const originalQuestion = this.questionsResponse.find(q => q.id === question.id);\n    if (!originalQuestion) {\n      console.error(\"Original question not found.\");\n      return;\n    }\n    const answerIds = [originalQuestion.falscheAntwort1, originalQuestion.falscheAntwort2, originalQuestion.falscheAntwort3, originalQuestion.richtigeAntwort];\n    const questionUrl = `http://localhost:5002/fragen/${question.id}`;\n    this.http.delete(questionUrl).subscribe(response => {\n      const deleteRequests = answerIds.map(answerId => {\n        const answerUrl = `http://localhost:5002/antworten/${answerId}`;\n        return this.http.delete(answerUrl);\n      });\n      forkJoin(deleteRequests).subscribe(responses => {\n        this.loadData();\n      }, error => {\n        console.error(\"Error deleting answers:\", error);\n      });\n    }, error => {\n      console.error(\"Error deleting question:\", error);\n    });\n  }\n  editQuestion(question) {\n    question.editing = true;\n  }\n  updateQuestion(question) {\n    const questionsUrl = `http://localhost:5002/fragen/${question.id}`;\n    this.http.put(questionsUrl, question).subscribe(response => {\n      this.loadData();\n    }, error => {\n      console.error('Error updating question:', error);\n    });\n  }\n}\nQuestionPageComponent.ɵfac = function QuestionPageComponent_Factory(t) {\n  return new (t || QuestionPageComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\nQuestionPageComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: QuestionPageComponent,\n  selectors: [[\"app-question-page\"]],\n  decls: 27,\n  vars: 2,\n  consts: [[1, \"container\"], [1, \"question-container\"], [1, \"text-center\"], [1, \"table\", \"table-bordered\"], [4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [1, \"button-container\"], [1, \"btn\", \"btn-primary\", \"add-new\", 3, \"click\"], [\"type\", \"button\", \"class\", \"btn btn-success action-btn\", 3, \"click\", 4, \"ngIf\"], [\"type\", \"button\", \"class\", \"btn btn-danger action-btn\", 3, \"click\", 4, \"ngIf\"], [\"placeholder\", \"Frage\", 1, \"new-input\", 3, \"ngModel\", \"ngModelChange\"], [\"placeholder\", \"falscheAntwort1\", 1, \"new-input\", 3, \"ngModel\", \"ngModelChange\"], [\"placeholder\", \"falscheAntwort2\", 1, \"new-input\", 3, \"ngModel\", \"ngModelChange\"], [\"placeholder\", \"falscheAntwort3\", 1, \"new-input\", 3, \"ngModel\", \"ngModelChange\"], [\"placeholder\", \"richtigeAntwort\", 1, \"new-input\", 3, \"ngModel\", \"ngModelChange\"], [\"placeholder\", \"categoryName\", 1, \"new-input\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"button\", 1, \"btn\", \"btn-success\", \"action-btn\", 3, \"click\"], [1, \"fas\", \"fa-edit\"], [1, \"fas\", \"fa-save\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", \"action-btn\", 3, \"click\"], [1, \"far\", \"fa-trash-alt\"], [\"placeholder\", \"Question\", 1, \"new-input\", 3, \"ngModel\", \"ngModelChange\"], [\"placeholder\", \"Wrong Answer 1\", 1, \"new-input\", 3, \"ngModel\", \"ngModelChange\"], [\"placeholder\", \"Wrong Answer 2\", 1, \"new-input\", 3, \"ngModel\", \"ngModelChange\"], [\"placeholder\", \"Wrong Answer 3\", 1, \"new-input\", 3, \"ngModel\", \"ngModelChange\"], [\"placeholder\", \"Correct Answer\", 1, \"new-input\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"]],\n  template: function QuestionPageComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h3\", 2);\n      i0.ɵɵtext(3, \"Questions\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"table\", 3)(5, \"thead\")(6, \"tr\")(7, \"th\");\n      i0.ɵɵtext(8, \"Question\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"th\");\n      i0.ɵɵtext(10, \"Wrong Answer 1\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"th\");\n      i0.ɵɵtext(12, \"Wrong Answer 2\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"th\");\n      i0.ɵɵtext(14, \"Wrong Answer 3\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"th\");\n      i0.ɵɵtext(16, \"Correct Answer\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"th\");\n      i0.ɵɵtext(18, \"Category\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"th\");\n      i0.ɵɵtext(20, \"Actions\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(21, \"tbody\");\n      i0.ɵɵtemplate(22, QuestionPageComponent_tr_22_Template, 17, 15, \"tr\", 4);\n      i0.ɵɵtemplate(23, QuestionPageComponent_tr_23_Template, 16, 8, \"tr\", 5);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(24, \"div\", 6)(25, \"button\", 7);\n      i0.ɵɵlistener(\"click\", function QuestionPageComponent_Template_button_click_25_listener() {\n        return ctx.addNewRow();\n      });\n      i0.ɵɵtext(26, \"Add New\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(22);\n      i0.ɵɵproperty(\"ngForOf\", ctx.questions);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.newRow.editing);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgModel],\n  styles: [\".container[_ngcontent-%COMP%] {\\n    display: flex;\\n    height: 100%;\\n    gap: 2rem;\\n    flex-direction: column; \\n}\\n\\n.category-container[_ngcontent-%COMP%], .question-container[_ngcontent-%COMP%] { \\n    width: 100%;\\n    max-width: 100%;\\n    background-color: white;\\n    border-radius: 8px;\\n    padding: 20px;\\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\\n    margin: 0 auto;\\n    margin-bottom: 2rem;\\n}\\n\\n.button-container[_ngcontent-%COMP%] {\\n    display: flex;\\n    justify-content: space-between;\\n    margin-top: 10px;\\n}\\n\\n.table[_ngcontent-%COMP%] {\\n    width: 100%;\\n}\\n\\n.new-input[_ngcontent-%COMP%] {\\n    width: 100%;\\n}\\n\\n@media (max-width: 991px) {\\n    .container[_ngcontent-%COMP%] {\\n        flex-direction: column;\\n    }\\n    .category-container[_ngcontent-%COMP%], .question-container[_ngcontent-%COMP%], .highscore-container[_ngcontent-%COMP%] {\\n        max-width: 100%;\\n    }\\n}\\n\\n.btn[_ngcontent-%COMP%] {\\n    display: inline-flex;\\n    align-items: center;\\n    justify-content: center;\\n    height: 34px;\\n    padding: 0 12px;\\n}\\n\\n.btn[_ngcontent-%COMP%]   i[_ngcontent-%COMP%] {\\n    display: inline-block;\\n    vertical-align: middle;\\n}\\n\\n.action-btn-group[_ngcontent-%COMP%] {\\n    display: inline-flex;\\n}\\n\\n.action-btn[_ngcontent-%COMP%] {\\n    margin-right: 4px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZGFzaGJvYXJkL3F1ZXN0aW9uLXBhZ2UvcXVlc3Rpb24tcGFnZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksYUFBYTtJQUNiLFlBQVk7SUFDWixTQUFTO0lBQ1Qsc0JBQXNCLEVBQUUsNkNBQTZDO0FBQ3pFOztBQUVBO3NCQUNzQiwyQkFBMkI7SUFDN0MsV0FBVztJQUNYLGVBQWU7SUFDZix1QkFBdUI7SUFDdkIsa0JBQWtCO0lBQ2xCLGFBQWE7SUFDYix3Q0FBd0M7SUFDeEMsY0FBYztJQUNkLG1CQUFtQjtBQUN2Qjs7QUFFQTtJQUNJLGFBQWE7SUFDYiw4QkFBOEI7SUFDOUIsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksV0FBVztBQUNmOztBQUVBO0lBQ0ksV0FBVztBQUNmOztBQUVBO0lBQ0k7UUFDSSxzQkFBc0I7SUFDMUI7SUFDQTs7O1FBR0ksZUFBZTtJQUNuQjtBQUNKOztBQUVBO0lBQ0ksb0JBQW9CO0lBQ3BCLG1CQUFtQjtJQUNuQix1QkFBdUI7SUFDdkIsWUFBWTtJQUNaLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSxxQkFBcUI7SUFDckIsc0JBQXNCO0FBQzFCOztBQUVBO0lBQ0ksb0JBQW9CO0FBQ3hCOztBQUVBO0lBQ0ksaUJBQWlCO0FBQ3JCIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgZ2FwOiAycmVtO1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47IC8qIEFkZCBmbGV4LWRpcmVjdGlvbiB0byBjZW50ZXIgdGhlIGNvbnRlbnQgKi9cbn1cblxuLmNhdGVnb3J5LWNvbnRhaW5lcixcbi5xdWVzdGlvbi1jb250YWluZXIgeyAvKiBBZGQgcXVlc3Rpb24tY29udGFpbmVyICovXG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWF4LXdpZHRoOiAxMDAlO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICAgIGJvcmRlci1yYWRpdXM6IDhweDtcbiAgICBwYWRkaW5nOiAyMHB4O1xuICAgIGJveC1zaGFkb3c6IDAgMnB4IDRweCByZ2JhKDAsIDAsIDAsIDAuMSk7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gICAgbWFyZ2luLWJvdHRvbTogMnJlbTtcbn1cblxuLmJ1dHRvbi1jb250YWluZXIge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgIG1hcmdpbi10b3A6IDEwcHg7XG59XG5cbi50YWJsZSB7XG4gICAgd2lkdGg6IDEwMCU7XG59XG5cbi5uZXctaW5wdXQge1xuICAgIHdpZHRoOiAxMDAlO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogOTkxcHgpIHtcbiAgICAuY29udGFpbmVyIHtcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICB9XG4gICAgLmNhdGVnb3J5LWNvbnRhaW5lcixcbiAgICAucXVlc3Rpb24tY29udGFpbmVyLCAvKiBBZGQgcXVlc3Rpb24tY29udGFpbmVyICovXG4gICAgLmhpZ2hzY29yZS1jb250YWluZXIge1xuICAgICAgICBtYXgtd2lkdGg6IDEwMCU7XG4gICAgfVxufVxuXG4uYnRuIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGhlaWdodDogMzRweDtcbiAgICBwYWRkaW5nOiAwIDEycHg7XG59XG5cbi5idG4gaSB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG59XG5cbi5hY3Rpb24tYnRuLWdyb3VwIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtZmxleDtcbn1cblxuLmFjdGlvbi1idG4ge1xuICAgIG1hcmdpbi1yaWdodDogNHB4O1xufVxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["forkJoin","i0","QuestionPageComponent","constructor","http","ngOnInit","loadData","console","log","questions","categoriesUrl","questionsUrl","answersUrl","get","subscribe","categoriesResponse","questionsResponse","answersResponse","categories","answers","map","question","category","find","cat","id","kategorien_id","getAnswerById","falscheAntwort1","falscheAntwort2","falscheAntwort3","richtigeAntwort","categoryName","name","answerId","answer","a","antwort","addNewRow","newRow","editing","push","submitNewAnswers","answersSubmitted","some","trim","error","postRequests","index","length","postRequest","post","responses","submitNewQuestion","answerAll","newQuestion","frage","response","deleteQuestion","originalQuestion","q","answerIds","questionUrl","delete","deleteRequests","answerUrl","editQuestion","updateQuestion","put","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/tomhanks/Documents/Develop/BBB/M151/Code_Angular_Project/src/app/dashboard/question-page/question-page.component.ts","/Users/tomhanks/Documents/Develop/BBB/M151/Code_Angular_Project/src/app/dashboard/question-page/question-page.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { forkJoin } from 'rxjs';\n\n@Component({\n  selector: 'app-question-page',\n  templateUrl: './question-page.component.html',\n  styleUrls: ['./question-page.component.css']\n})\nexport class QuestionPageComponent implements OnInit {\n  questions: Array<any> = [];\n  categories: Array<any> = [];\n  answers: Array<any> = [];\n  newRow: any = {};\n  questionsResponse: Array<any> = [];\n\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit() {\n    this.loadData();\n    console.log(\"question array 1\" + this.questions);\n    console.log(\"fett\");\n  }\n\n  loadData() {\n    console.log(\"allu\");\n    const categoriesUrl = 'http://localhost:5002/kategorien';\n    const questionsUrl = 'http://localhost:5002/fragen';\n    const answersUrl = 'http://localhost:5002/antworten';\n\n    forkJoin([\n      this.http.get<Array<any>>(categoriesUrl),\n      this.http.get<Array<any>>(questionsUrl),\n      this.http.get<Array<any>>(answersUrl)\n    ]).subscribe(([categoriesResponse, questionsResponse, answersResponse]) => {\n      this.categories = categoriesResponse;\n      this.answers = answersResponse;\n      this.questionsResponse = questionsResponse; // Set the questionsResponse property\n      console.log(questionsResponse);\n      this.questions = questionsResponse.map(question => {\n        const category = this.categories.find(cat => cat.id === question.kategorien_id);\n        const answers = [\n          this.getAnswerById(question.falscheAntwort1),\n          this.getAnswerById(question.falscheAntwort2),\n          this.getAnswerById(question.falscheAntwort3),\n          this.getAnswerById(question.richtigeAntwort),\n        ];\n        return { ...question, categoryName: category?.name, falscheAntwort1:answers[0],falscheAntwort2:answers[1], falscheAntwort3:answers[2], richtigeAntwort:answers[3] };\n      });\n    });\n  }\n\n  getAnswerById(answerId: number): string {\n    const answer = this.answers.find(a => a.id === answerId);\n    return answer ? answer.antwort : '';\n  }\n\n  addNewRow() {\n    this.newRow = {\n      editing: true\n    };\n    this.questions.push(this.newRow);\n  }\n\n  submitNewAnswers(answer: any) {\n    const answersUrl = 'http://localhost:5002/antworten';\n    const answersSubmitted = [\n      this.newRow.falscheAntwort1,\n      this.newRow.falscheAntwort2,\n      this.newRow.falscheAntwort3,\n      this.newRow.richtigeAntwort,\n    ];\n\n    console.log(\"newRow:\", this.newRow);\n    console.log(\"answersSubmitted:\", answersSubmitted);\n\n    if (answersSubmitted.some((answer) => !answer || answer.trim() === \"\")) {\n      console.error(\"One or more answers are empty. Please provide valid answers.\");\n      return;\n    }\n    const postRequests = [];\n  \n    for (let index = 0; index < answersSubmitted.length; index++) {\n      const postRequest = this.http.post(answersUrl, { antwort: answersSubmitted[index] });\n      postRequests.push(postRequest);\n    }\n  \n    forkJoin(postRequests).subscribe(\n      (responses) => {\n        this.loadData();\n        this.submitNewQuestion(this.newRow, responses);\n      },\n      (error) => {\n        console.error('Error submitting new question:', error);\n      }\n    );\n\n  }\n\n  submitNewQuestion(question: any, answerAll: any[]) {\n    \n    console.log(\"alla\");\n    //console.log(question);\n    const questionsUrl = 'http://localhost:5002/fragen';\n    const newQuestion = {\n      frage: this.newRow.question,\n      falscheAntwort1: answerAll[0].id,\n      falscheAntwort2: answerAll[1].id,\n      falscheAntwort3: answerAll[2].id,\n      richtigeAntwort: answerAll[3].id,\n      kategorien_id: this.newRow.kategorien_id,\n    };\n    \n    \n    console.log(newQuestion);\n    this.http.post(questionsUrl, newQuestion).subscribe(\n      response => {\n        this.loadData();\n      },\n      error => {\n        console.error('Error submitting new question:', error);\n      }\n    );\n  }\n\n  deleteQuestion(question: any) {\n    const originalQuestion = this.questionsResponse.find(q => q.id === question.id);\n  \n    if (!originalQuestion) {\n      console.error(\"Original question not found.\");\n      return;\n    }\n  \n    const answerIds = [\n      originalQuestion.falscheAntwort1,\n      originalQuestion.falscheAntwort2,\n      originalQuestion.falscheAntwort3,\n      originalQuestion.richtigeAntwort,\n    ];\n  \n    const questionUrl = `http://localhost:5002/fragen/${question.id}`;\n    this.http.delete(questionUrl).subscribe(\n      (response) => {\n        const deleteRequests = answerIds.map((answerId) => {\n          const answerUrl = `http://localhost:5002/antworten/${answerId}`;\n          return this.http.delete(answerUrl);\n        });\n  \n        forkJoin(deleteRequests).subscribe(\n          (responses) => {\n            this.loadData();\n          },\n          (error) => {\n            console.error(\"Error deleting answers:\", error);\n          }\n        );\n      },\n      (error) => {\n        console.error(\"Error deleting question:\", error);\n      }\n    );\n  }\n  \n  \n  \n\n  editQuestion(question: any) {\n    question.editing = true;\n  }\n\n  updateQuestion(question: any) {\n    const questionsUrl = `http://localhost:5002/fragen/${question.id}`;\n    this.http.put(questionsUrl, question).subscribe(\n      response => {\n        this.loadData();\n      },\n      error => {\n        console.error('Error updating question:', error);\n      }\n    );\n  }\n}\n","<script src=\"https://kit.fontawesome.com/c98497f7ae.js\" crossorigin=\"anonymous\"></script>\n\n<div class=\"container\">\n    <div class=\"question-container\">\n        <h3 class=\"text-center\">Questions</h3>\n        <table class=\"table table-bordered\">\n            <thead>\n                <tr>\n                    <th>Question</th>\n                    <th>Wrong Answer 1</th>\n                    <th>Wrong Answer 2</th>\n                    <th>Wrong Answer 3</th>\n                    <th>Correct Answer</th>\n                    <th>Category</th>\n                    <th>Actions</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let question of questions; let i = index\">\n                    <td *ngIf=\"!question.editing\">{{ question.frage }}</td>\n                    <td *ngIf=\"question.editing\"><input [(ngModel)]=\"question.frage\" placeholder=\"Frage\" class=\"new-input\"></td>\n                    <td *ngIf=\"!question.editing\">{{ question.falscheAntwort1 }}</td>\n                    <td *ngIf=\"question.editing\"><input [(ngModel)]=\"question.falscheAntwort1\" placeholder=\"falscheAntwort1\" class=\"new-input\"></td>\n                    <td *ngIf=\"!question.editing\">{{ question.falscheAntwort2 }}</td>\n                    <td *ngIf=\"question.editing\"><input [(ngModel)]=\"question.falscheAntwort2\" placeholder=\"falscheAntwort2\" class=\"new-input\"></td>\n                    <td *ngIf=\"!question.editing\">{{ question.falscheAntwort3 }}</td>\n                    <td *ngIf=\"question.editing\"><input [(ngModel)]=\"question.falscheAntwort3\" placeholder=\"falscheAntwort3\" class=\"new-input\"></td>\n                    <td *ngIf=\"!question.editing\">{{ question.richtigeAntwort }}</td>\n                    <td *ngIf=\"question.editing\"><input [(ngModel)]=\"question.richtigeAntwort\" placeholder=\"richtigeAntwort\" class=\"new-input\"></td>\n                    <td *ngIf=\"!question.editing\">{{ question.categoryName }}</td>\n                    <td *ngIf=\"question.editing\"><input [(ngModel)]=\"question.categoryName\" placeholder=\"categoryName\" class=\"new-input\"></td>\n                    <td>\n                        <button *ngIf=\"!newRow.editing\" type=\"button\" class=\"btn btn-success action-btn\" (click)=\"editQuestion(question)\"><i class=\"fas fa-edit\"></i></button>\n                        <button *ngIf=\"question.editing\" type=\"button\" class=\"btn btn-success action-btn\" (click)=\"updateQuestion(question)\"><i class=\"fas fa-save\"></i></button>\n                        <button *ngIf=\"!newRow.editing\" type=\"button\" class=\"btn btn-danger action-btn\" (click)=\"deleteQuestion(question)\"><i class=\"far fa-trash-alt\"></i></button>\n                    </td>\n                </tr>\n                <tr *ngIf=\"newRow.editing\">\n                    <td><input [(ngModel)]=\"newRow.question\" placeholder=\"Question\" class=\"new-input\"></td>\n                    <td><input [(ngModel)]=\"newRow.falscheAntwort1\" placeholder=\"Wrong Answer 1\" class=\"new-input\"></td>\n                    <td><input [(ngModel)]=\"newRow.falscheAntwort2\" placeholder=\"Wrong Answer 2\" class=\"new-input\"></td>\n                    <td><input [(ngModel)]=\"newRow.falscheAntwort3\" placeholder=\"Wrong Answer 3\" class=\"new-input\"></td>\n                    <td><input [(ngModel)]=\"newRow.richtigeAntwort\" placeholder=\"Correct Answer\" class=\"new-input\"></td>\n                    <td>\n                        <select type=\"text\" [(ngModel)]=\"newRow.kategorien_id\">\n                            <option *ngFor=\"let category of categories\" [value]=\"category.id\">{{ category.name }}</option>\n                        </select>\n                    </td>\n                    <td>\n                        <button *ngIf=\"newRow.editing\" type=\"button\" class=\"btn btn-success action-btn\" (click)=\"submitNewAnswers(newRow)\"><i class=\"fas fa-save\"></i></button>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n        <div class=\"button-container\">\n            <button class=\"btn btn-primary add-new\" (click)=\"addNewRow()\">Add New</button>\n        </div>\n    </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
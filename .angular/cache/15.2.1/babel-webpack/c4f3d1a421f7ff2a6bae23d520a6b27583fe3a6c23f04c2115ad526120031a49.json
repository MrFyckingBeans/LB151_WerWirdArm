{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nfunction QuestionPageComponent_tr_16_li_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const answer_r3 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(answer_r3);\n  }\n}\nfunction QuestionPageComponent_tr_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\")(4, \"ul\");\n    i0.ɵɵtemplate(5, QuestionPageComponent_tr_16_li_5_Template, 2, 1, \"li\", 4);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"td\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const question_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(question_r1.frage);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", question_r1.answers);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(question_r1.categoryName);\n  }\n}\nexport class QuestionPageComponent {\n  constructor(http) {\n    this.http = http;\n    this.questions = [];\n    this.categories = [];\n    this.answers = [];\n  }\n  getAnswerById(answerId, answers) {\n    const answer = answers.find(a => a.id === answerId);\n    return answer ? answer.antwort : '';\n  }\n  ngOnInit() {\n    const categoriesUrl = 'http://localhost:5002/kategorien';\n    const questionsUrl = 'http://localhost:5002/fragen';\n    const answersUrl = 'http://localhost:5002/antworten';\n    this.http.get(categoriesUrl).subscribe(categoriesResponse => {\n      this.categories = categoriesResponse;\n      this.http.get(questionsUrl).subscribe(questionsResponse => {\n        this.http.get(answersUrl).subscribe(answersResponse => {\n          this.answers = answersResponse;\n          this.questions = questionsResponse.map(question => {\n            const category = this.categories.find(cat => cat.id === question.kategorien_id);\n            const answers = [this.getAnswerById(question.falscheAntwort1, this.answers), this.getAnswerById(question.falscheAntwort2, this.answers), this.getAnswerById(question.falscheAntwort3, this.answers), this.getAnswerById(question.richtigeAntwort, this.answers)];\n            return {\n              ...question,\n              categoryName: category?.name,\n              answers\n            };\n          });\n        });\n      });\n    });\n  }\n}\nQuestionPageComponent.ɵfac = function QuestionPageComponent_Factory(t) {\n  return new (t || QuestionPageComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\nQuestionPageComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: QuestionPageComponent,\n  selectors: [[\"app-question-page\"]],\n  decls: 18,\n  vars: 1,\n  consts: [[1, \"container\"], [1, \"category-container\"], [1, \"text-center\"], [1, \"table\", \"table-bordered\"], [4, \"ngFor\", \"ngForOf\"], [1, \"button-container\"]],\n  template: function QuestionPageComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h3\", 2);\n      i0.ɵɵtext(3, \"Questions\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"table\", 3)(5, \"thead\")(6, \"tr\")(7, \"th\");\n      i0.ɵɵtext(8, \"Question\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"th\");\n      i0.ɵɵtext(10, \"Answers\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"th\");\n      i0.ɵɵtext(12, \"Category\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"th\");\n      i0.ɵɵtext(14, \"Actions\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(15, \"tbody\");\n      i0.ɵɵtemplate(16, QuestionPageComponent_tr_16_Template, 9, 3, \"tr\", 4);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(17, \"div\", 5);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(16);\n      i0.ɵɵproperty(\"ngForOf\", ctx.questions);\n    }\n  },\n  dependencies: [i2.NgForOf],\n  styles: [\".container[_ngcontent-%COMP%] {\\n    display: flex;\\n    height: 100%;\\n    gap: 2rem;\\n    flex-direction: column; \\n}\\n\\n.category-container[_ngcontent-%COMP%], .question-container[_ngcontent-%COMP%] { \\n    width: 100%;\\n    max-width: 100%;\\n    background-color: white;\\n    border-radius: 8px;\\n    padding: 20px;\\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\\n    margin: 0 auto;\\n    margin-bottom: 2rem;\\n}\\n\\n.button-container[_ngcontent-%COMP%] {\\n    display: flex;\\n    justify-content: space-between;\\n    margin-top: 10px;\\n}\\n\\n.table[_ngcontent-%COMP%] {\\n    width: 100%;\\n}\\n\\n.new-input[_ngcontent-%COMP%] {\\n    width: 100%;\\n}\\n\\n@media (max-width: 991px) {\\n    .container[_ngcontent-%COMP%] {\\n        flex-direction: column;\\n    }\\n    .category-container[_ngcontent-%COMP%], .question-container[_ngcontent-%COMP%], .highscore-container[_ngcontent-%COMP%] {\\n        max-width: 100%;\\n    }\\n}\\n\\n.btn[_ngcontent-%COMP%] {\\n    display: inline-flex;\\n    align-items: center;\\n    justify-content: center;\\n    height: 34px;\\n    padding: 0 12px;\\n}\\n\\n.btn[_ngcontent-%COMP%]   i[_ngcontent-%COMP%] {\\n    display: inline-block;\\n    vertical-align: middle;\\n}\\n\\n.action-btn-group[_ngcontent-%COMP%] {\\n    display: inline-flex;\\n}\\n\\n.action-btn[_ngcontent-%COMP%] {\\n    margin-right: 4px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZGFzaGJvYXJkL3F1ZXN0aW9uLXBhZ2UvcXVlc3Rpb24tcGFnZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksYUFBYTtJQUNiLFlBQVk7SUFDWixTQUFTO0lBQ1Qsc0JBQXNCLEVBQUUsNkNBQTZDO0FBQ3pFOztBQUVBO3NCQUNzQiwyQkFBMkI7SUFDN0MsV0FBVztJQUNYLGVBQWU7SUFDZix1QkFBdUI7SUFDdkIsa0JBQWtCO0lBQ2xCLGFBQWE7SUFDYix3Q0FBd0M7SUFDeEMsY0FBYztJQUNkLG1CQUFtQjtBQUN2Qjs7QUFFQTtJQUNJLGFBQWE7SUFDYiw4QkFBOEI7SUFDOUIsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksV0FBVztBQUNmOztBQUVBO0lBQ0ksV0FBVztBQUNmOztBQUVBO0lBQ0k7UUFDSSxzQkFBc0I7SUFDMUI7SUFDQTs7O1FBR0ksZUFBZTtJQUNuQjtBQUNKOztBQUVBO0lBQ0ksb0JBQW9CO0lBQ3BCLG1CQUFtQjtJQUNuQix1QkFBdUI7SUFDdkIsWUFBWTtJQUNaLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSxxQkFBcUI7SUFDckIsc0JBQXNCO0FBQzFCOztBQUVBO0lBQ0ksb0JBQW9CO0FBQ3hCOztBQUVBO0lBQ0ksaUJBQWlCO0FBQ3JCIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgZ2FwOiAycmVtO1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47IC8qIEFkZCBmbGV4LWRpcmVjdGlvbiB0byBjZW50ZXIgdGhlIGNvbnRlbnQgKi9cbn1cblxuLmNhdGVnb3J5LWNvbnRhaW5lcixcbi5xdWVzdGlvbi1jb250YWluZXIgeyAvKiBBZGQgcXVlc3Rpb24tY29udGFpbmVyICovXG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWF4LXdpZHRoOiAxMDAlO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICAgIGJvcmRlci1yYWRpdXM6IDhweDtcbiAgICBwYWRkaW5nOiAyMHB4O1xuICAgIGJveC1zaGFkb3c6IDAgMnB4IDRweCByZ2JhKDAsIDAsIDAsIDAuMSk7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gICAgbWFyZ2luLWJvdHRvbTogMnJlbTtcbn1cblxuLmJ1dHRvbi1jb250YWluZXIge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgIG1hcmdpbi10b3A6IDEwcHg7XG59XG5cbi50YWJsZSB7XG4gICAgd2lkdGg6IDEwMCU7XG59XG5cbi5uZXctaW5wdXQge1xuICAgIHdpZHRoOiAxMDAlO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogOTkxcHgpIHtcbiAgICAuY29udGFpbmVyIHtcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICB9XG4gICAgLmNhdGVnb3J5LWNvbnRhaW5lcixcbiAgICAucXVlc3Rpb24tY29udGFpbmVyLCAvKiBBZGQgcXVlc3Rpb24tY29udGFpbmVyICovXG4gICAgLmhpZ2hzY29yZS1jb250YWluZXIge1xuICAgICAgICBtYXgtd2lkdGg6IDEwMCU7XG4gICAgfVxufVxuXG4uYnRuIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGhlaWdodDogMzRweDtcbiAgICBwYWRkaW5nOiAwIDEycHg7XG59XG5cbi5idG4gaSB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG59XG5cbi5hY3Rpb24tYnRuLWdyb3VwIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtZmxleDtcbn1cblxuLmFjdGlvbi1idG4ge1xuICAgIG1hcmdpbi1yaWdodDogNHB4O1xufVxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","QuestionPageComponent","constructor","http","getAnswerById","answerId","answers","answer","find","a","id","antwort","ngOnInit","categoriesUrl","questionsUrl","answersUrl","get","subscribe","categoriesResponse","categories","questionsResponse","answersResponse","questions","map","question","category","cat","kategorien_id","falscheAntwort1","falscheAntwort2","falscheAntwort3","richtigeAntwort","categoryName","name","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/tomhanks/Documents/Develop/BBB/M151/Code_Angular_Project/src/app/dashboard/question-page/question-page.component.html","/Users/tomhanks/Documents/Develop/BBB/M151/Code_Angular_Project/src/app/dashboard/question-page/question-page.component.ts"],"sourcesContent":["<script src=\"https://kit.fontawesome.com/c98497f7ae.js\" crossorigin=\"anonymous\"></script>\n\n<div class=\"container\">\n  <div class=\"category-container\">\n    <h3 class=\"text-center\">Questions</h3>\n    <table class=\"table table-bordered\">\n      <thead>\n        <tr>\n          <th>Question</th>\n          <th>Answers</th>\n          <th>Category</th>\n          <th>Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let question of questions\">\n          <td>{{ question.frage }}</td>\n          <td>\n            <ul>\n              <li *ngFor=\"let answer of question.answers\">{{ answer }}</li>\n            </ul>\n          </td>\n          <td>{{ question.categoryName }}</td>\n          <td>\n            <!-- Add action buttons here -->\n          </td>\n        </tr>\n      </tbody>\n    </table>\n    <div class=\"button-container\">\n      <!-- Add \"Add New\" button here if needed -->\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-question-page',\n  templateUrl: './question-page.component.html',\n  styleUrls: ['./question-page.component.css']\n})\nexport class QuestionPageComponent implements OnInit {\n  questions: Array<any> = [];\n  categories: Array<any> = [];\n  answers: Array<any> = [];\n\n  constructor(private http: HttpClient) { }\n\n  private getAnswerById(answerId: number, answers: Array<any>): string {\n    const answer = answers.find(a => a.id === answerId);\n    return answer ? answer.antwort : '';\n  }\n\n  ngOnInit() {\n    const categoriesUrl = 'http://localhost:5002/kategorien';\n    const questionsUrl = 'http://localhost:5002/fragen';\n    const answersUrl = 'http://localhost:5002/antworten';\n  \n    this.http.get<Array<any>>(categoriesUrl).subscribe((categoriesResponse) => {\n      this.categories = categoriesResponse;\n  \n      this.http.get<Array<any>>(questionsUrl).subscribe((questionsResponse) => {\n        this.http.get<Array<any>>(answersUrl).subscribe((answersResponse) => {\n          this.answers = answersResponse;\n  \n          this.questions = questionsResponse.map(question => {\n            const category = this.categories.find(cat => cat.id === question.kategorien_id);\n            const answers = [\n              this.getAnswerById(question.falscheAntwort1, this.answers),\n              this.getAnswerById(question.falscheAntwort2, this.answers),\n              this.getAnswerById(question.falscheAntwort3, this.answers),\n              this.getAnswerById(question.richtigeAntwort, this.answers),\n            ];\n            return { ...question, categoryName: category?.name, answers };\n          });\n        });\n      });\n    });\n  }\n\n  \n  \n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
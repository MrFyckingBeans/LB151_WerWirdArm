{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../header/header.component\";\nfunction QuizPageComponent_button_23_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function QuizPageComponent_button_23_Template_button_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const answer_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.answerQuestion(answer_r1));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const answer_r1 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate1(\"id\", \"answer-\", answer_r1.id, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(answer_r1.antwort);\n  }\n}\nexport class QuizPageComponent {\n  constructor(http) {\n    this.http = http;\n    this.questions = [];\n    this.currentAnswers = [];\n  }\n  ngOnInit() {\n    this.playerData = JSON.parse(localStorage.getItem('playerdata') || '{}');\n    this.getQuestions();\n  }\n  getQuestions() {\n    const questionsUrl = 'http://localhost:5002/fragen';\n    const answersUrl = 'http://localhost:5002/antworten';\n    this.http.get(questionsUrl).subscribe(questionsResponse => {\n      this.http.get(answersUrl).subscribe(answersResponse => {\n        const filteredQuestions = questionsResponse.filter(q => q.kategorien_id === this.playerData.kategorien_id);\n        filteredQuestions.forEach(question => {\n          const questionAnswers = answersResponse.filter(a => a.frage_id === question.id);\n          this.questions.push({\n            ...question,\n            answers: questionAnswers\n          });\n        });\n        this.displayRandomQuestion();\n      });\n    });\n  }\n  displayRandomQuestion() {\n    const randomIndex = Math.floor(Math.random() * this.questions.length);\n    this.currentQuestion = this.questions[randomIndex];\n    this.currentAnswers = this.currentQuestion.answers;\n  }\n  shuffle(array) {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n  }\n  answerQuestion(selectedAnswer) {\n    console.log('User selected answer:', selectedAnswer);\n  }\n}\nQuizPageComponent.ɵfac = function QuizPageComponent_Factory(t) {\n  return new (t || QuizPageComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\nQuizPageComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: QuizPageComponent,\n  selectors: [[\"app-quiz-page\"]],\n  decls: 27,\n  vars: 4,\n  consts: [[\"pageTitleRight\", \"Quiz\", 3, \"logInBtn\", \"logOutBtn\"], [1, \"container\", \"quiz-container\"], [1, \"row\"], [1, \"col\", \"text-start\"], [1, \"col\", \"d-flex\", \"justify-content-center\", \"align-items-center\", \"question-col\"], [1, \"col\", \"text-end\"], [1, \"d-flex\", \"justify-content-center\", \"align-items-center\", \"buttons-container\", \"text-center\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", \"mb-3\", \"d-block\"], [\"type\", \"button\", 1, \"btn\", \"btn-success\", \"d-block\"], [1, \"answer-buttons\"], [\"class\", \"answer-button\", 3, \"id\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"next-button-container\"], [1, \"btn\", \"btn-primary\"], [1, \"answer-button\", 3, \"id\", \"click\"]],\n  template: function QuizPageComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"app-header\", 0);\n      i0.ɵɵelementStart(1, \"head\")(2, \"title\");\n      i0.ɵɵtext(3, \"Quiz Page\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"body\")(5, \"div\", 1)(6, \"div\", 2)(7, \"div\", 3)(8, \"span\");\n      i0.ɵɵtext(9, \"Punkte: XX\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"div\", 4)(11, \"h3\");\n      i0.ɵɵtext(12);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"div\", 5)(14, \"span\");\n      i0.ɵɵtext(15, \"00:00\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(16, \"div\", 6)(17, \"div\")(18, \"button\", 7);\n      i0.ɵɵtext(19, \"Cash Out\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"button\", 8);\n      i0.ɵɵtext(21, \"50 / 50 Joker\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(22, \"div\", 9);\n      i0.ɵɵtemplate(23, QuizPageComponent_button_23_Template, 2, 2, \"button\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"div\", 11)(25, \"button\", 12);\n      i0.ɵɵtext(26, \"Next\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"logInBtn\", false)(\"logOutBtn\", false);\n      i0.ɵɵadvance(12);\n      i0.ɵɵtextInterpolate1(\"F\", ctx.currentQuestion.frage, \"\");\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"ngForOf\", ctx.currentAnswers);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.HeaderComponent],\n  styles: [\"body[_ngcontent-%COMP%] {\\n    background-color: #F5F5F5;\\n}\\n.quiz-container[_ngcontent-%COMP%] {\\n    max-width: 80%;\\n    background-color: #F5F5F5;\\n}\\n\\n.question-col[_ngcontent-%COMP%] {\\n    min-height: 100px;\\n}\\n\\n.buttons-container[_ngcontent-%COMP%] {\\n    height: 50vh;\\n}\\n.next-button-container[_ngcontent-%COMP%] {\\n    margin-top: 1%;\\n    text-align: right;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcXVpei1wYWdlL3F1aXotcGFnZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0kseUJBQXlCO0FBQzdCO0FBQ0E7SUFDSSxjQUFjO0lBQ2QseUJBQXlCO0FBQzdCOztBQUVBO0lBQ0ksaUJBQWlCO0FBQ3JCOztBQUVBO0lBQ0ksWUFBWTtBQUNoQjtBQUNBO0lBQ0ksY0FBYztJQUNkLGlCQUFpQjtBQUNyQiIsInNvdXJjZXNDb250ZW50IjpbImJvZHkge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNGNUY1RjU7XG59XG4ucXVpei1jb250YWluZXIge1xuICAgIG1heC13aWR0aDogODAlO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNGNUY1RjU7XG59XG5cbi5xdWVzdGlvbi1jb2wge1xuICAgIG1pbi1oZWlnaHQ6IDEwMHB4O1xufVxuXG4uYnV0dG9ucy1jb250YWluZXIge1xuICAgIGhlaWdodDogNTB2aDtcbn1cbi5uZXh0LWJ1dHRvbi1jb250YWluZXIge1xuICAgIG1hcmdpbi10b3A6IDElO1xuICAgIHRleHQtYWxpZ246IHJpZ2h0O1xufVxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","QuizPageComponent","constructor","http","ngOnInit","playerData","JSON","parse","localStorage","getItem","getQuestions","questionsUrl","answersUrl","get","subscribe","questionsResponse","answersResponse","filteredQuestions","filter","q","kategorien_id","forEach","question","questionAnswers","a","frage_id","id","questions","push","answers","displayRandomQuestion","randomIndex","Math","floor","random","length","currentQuestion","currentAnswers","shuffle","array","i","j","answerQuestion","selectedAnswer","console","log","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/tomhanks/Documents/Develop/BBB/M151/Code_Angular_Project/src/app/quiz-page/quiz-page.component.html","/Users/tomhanks/Documents/Develop/BBB/M151/Code_Angular_Project/src/app/quiz-page/quiz-page.component.ts"],"sourcesContent":["<app-header pageTitleRight = \"Quiz\" [logInBtn] = \"false\" [logOutBtn] = \"false\"></app-header>\n\n<head>\n    <title>Quiz Page</title>\n</head>\n<body>\n    <div class=\"container quiz-container\" >\n            <div class=\"row\">\n            <div class=\"col text-start\">\n                <span>Punkte: XX</span>\n            </div>\n            <div class=\"col d-flex justify-content-center align-items-center question-col\">\n                <h3>F{{currentQuestion.frage}}</h3>\n                </div>\n            <div class=\"col text-end\">\n                <span>00:00</span>\n            </div>\n        </div>\n        <div class=\"d-flex justify-content-center align-items-center buttons-container text-center\">\n            <div>\n                <button type=\"button\" class=\"btn btn-primary mb-3 d-block\">Cash Out</button>\n                <button type=\"button\" class=\"btn btn-success d-block\">50 / 50 Joker</button>\n            </div>\n        </div>\n        <div class=\"answer-buttons\">\n            <button *ngFor=\"let answer of currentAnswers\" class=\"answer-button\" id=\"answer-{{answer.id}}\" (click)=\"answerQuestion(answer)\">{{answer.antwort}}</button>\n          </div>\n          \n        <div class=\"next-button-container\">\n            <button class=\"btn btn-primary\">Next</button>\n        </div>\n        \n    </div>\n\n    <script src=\"https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js\" integrity=\"sha384-oBqDVmMz4fnFO9gybBud7Qz4Rm//Ad4NeE7g/1ktuBzRdV7E3C6zbA6F0E98j2xm\" crossorigin=\"anonymous\"></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.min.js\" integrity=\"sha384-cn7l7gDp0eyniUwwAZgrzD06kc/tftFf19TOAs2zVinnD/C7E91j9yyk5//jjpt/\" crossorigin=\"anonymous\"></script>\n</body>\n\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-quiz-page',\n  templateUrl: './quiz-page.component.html',\n  styleUrls: ['./quiz-page.component.css']\n})\nexport class QuizPageComponent implements OnInit {\n  playerData: any;\n  questions: any[] = [];\n  currentQuestion: any;\n  currentAnswers: any[] = [];\n\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit() {\n    this.playerData = JSON.parse(localStorage.getItem('playerdata') || '{}');\n    this.getQuestions();\n  }\n\n  getQuestions() {\n    const questionsUrl = 'http://localhost:5002/fragen';\n    const answersUrl = 'http://localhost:5002/antworten';\n    this.http.get<any[]>(questionsUrl).subscribe((questionsResponse: any[]) => {\n      this.http.get<any[]>(answersUrl).subscribe((answersResponse: any[]) => {\n        const filteredQuestions = questionsResponse.filter(q => q.kategorien_id === this.playerData.kategorien_id);\n        filteredQuestions.forEach(question => {\n          const questionAnswers = answersResponse.filter(a => a.frage_id === question.id);\n          this.questions.push({\n            ...question,\n            answers: questionAnswers\n          });\n        });\n        this.displayRandomQuestion();\n      });\n    });\n  }\n\n  displayRandomQuestion() {\n    const randomIndex = Math.floor(Math.random() * this.questions.length);\n    this.currentQuestion = this.questions[randomIndex];\n    this.currentAnswers = this.currentQuestion.answers;\n  }\n  \n\n  shuffle(array: any[]) {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n  }\n\n  answerQuestion(selectedAnswer: any) {\n    console.log('User selected answer:', selectedAnswer);\n  }\n  \n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}